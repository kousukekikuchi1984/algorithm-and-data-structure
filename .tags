!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	e-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/kou2kkkt/github/algorithm-and-data-structure/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
bruteforce	src/chapter3.rs	/^pub mod bruteforce;$/;"	n
chapter3	src/main.rs	/^mod chapter3;$/;"	n
devide_two	src/chapter3/bruteforce.rs	/^pub fn devide_two(nums: &mut Vec<u32>) -> u32 {$/;"	f
found	src/chapter3/bruteforce.rs	/^pub fn found(nums: Vec<u32>, target_num: u32) -> usize {$/;"	f
found_counter	src/chapter3/bruteforce.rs	/^pub fn found_counter(nums: Vec<u32>, target_num: u32) -> u32 {$/;"	f
main	src/main.rs	/^fn main() {$/;"	f
max_distance	src/chapter3/bruteforce.rs	/^pub fn max_distance(nums: Vec<u32>) -> u32 {$/;"	f
second_min	src/chapter3/bruteforce.rs	/^pub fn second_min(nums: Vec<u32>) -> u32 {$/;"	f
test_found	src/chapter3/bruteforce.rs	/^    fn test_found() {$/;"	f	module:tests
test_found_counter	src/chapter3/bruteforce.rs	/^    fn test_found_counter() {$/;"	f	module:tests
test_max_distance	src/chapter3/bruteforce.rs	/^    fn test_max_distance() {$/;"	f	module:tests
test_second_min	src/chapter3/bruteforce.rs	/^    fn test_second_min() {$/;"	f	module:tests
tests	src/chapter3/bruteforce.rs	/^mod tests {$/;"	n
